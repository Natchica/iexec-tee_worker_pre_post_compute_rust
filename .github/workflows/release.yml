name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

      - name: Run release-please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}

      - name: Show release outputs
        if: ${{ steps.release.outputs.release_created }}
        run: |
          echo "A release was created."
          echo "Tag: ${{ steps.release.outputs.tag_name }}"

      - name: Install gh cli and jq
        if: ${{ steps.release.outputs.release_created }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Update GitHub Release notes with all changelogs from PR body
        if: ${{ steps.release.outputs.release_created }}
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
        run: |
          TAG_NAME="${{ steps.release.outputs.tag_name }}"

          # Find the latest merged PR with 'autorelease: tagged' label and matching head branch
          PR_NUMBER=$(gh pr list --state merged --label "autorelease: tagged" --json number,mergedAt,headRefName --jq '[.[] | select(.headRefName | test("^release-please--branches--main"))] | sort_by(.mergedAt) | last.number')

          if [ -z "$PR_NUMBER" ]; then
            echo "No merged release PR found."
            exit 1
          fi

          echo "Found release PR: #$PR_NUMBER"

          # Get the PR body
          PR_BODY=$(gh pr view "$PR_NUMBER" --json body -q .body)

          # Truncate if too long for GitHub release note
          MAX=125000
          if [ "${#PR_BODY}" -gt "$MAX" ]; then
            PR_BODY="${PR_BODY:0:$MAX}... (truncated)"
          fi
          echo "$PR_BODY"

          # Update the release notes for the new tag
          gh release edit "$TAG_NAME" --notes "$PR_BODY"
