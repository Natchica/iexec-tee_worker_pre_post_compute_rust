name: Update Release Notes from PR

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  pull-requests: read

jobs:
  update-release-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install gh cli and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Find latest merged release PR
        id: find_pr
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
        run: |
          PR_NUMBER=$(gh pr list --state merged --label "autorelease: tagged" --json number,mergedAt,headRefName --jq '[.[] | select(.headRefName | test("^release-please--branches--main"))] | sort_by(.mergedAt) | last.number')
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Get PR body and format for all packages
        id: get_lists
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
        run: |
          PR_NUMBER="${{ steps.find_pr.outputs.pr_number }}"
          PR_BODY=$(gh pr view "$PR_NUMBER" --json body -q .body)

          # Save PR_BODY to a file to avoid issues with multi-line strings
          echo "$PR_BODY" > pr_body.md

          # Extract the first version header with date and link
          VERSION_HEADER=$(grep -m1 -E '^\[[0-9]+\.[0-9]+\.[0-9]+\]\(.*\) \([0-9]{4}-[0-9]{2}-[0-9]{2}\)$' pr_body.md)
          [ -z "$VERSION_HEADER" ] && VERSION_HEADER="## Release"

          # Split blocks by version header (exclude the header line itself)
          awk '
            BEGIN {block=""; inblock=0;}
            /^\[[0-9]+\.[0-9]+\.[0-9]+\]\(.*\) \([0-9]{4}-[0-9]{2}-[0-9]{2}\)$/ {
              if(inblock && block != "") {
                print block "---BLOCK---"
                block=""
              }
              inblock=1
              next
            }
            inblock {block=block $0 "\n"}
            END {if(inblock && block != "") print block "---BLOCK---"}
          ' pr_body.md > blocks.tmp

          # Split each block and process
          awk -v RS="---BLOCK---\n" 'NF' blocks.tmp | while IFS= read -r block; do
            # Extract package name from first bolded entry in a list item
            PKG=$(echo "$block" | grep -m1 -oP '^\s*[*-]\s+\*\*\K[^*:]+' | sed 's/_/ /g')
            [ -z "$PKG" ] && PKG="unknown package"
            # Print the block with > package name
            echo ""
            echo "> $PKG"
            echo "$block" | sed '/^$/d'
            echo ""
          done > lists.md

          # Compose the final release note file
          {
            echo "$VERSION_HEADER"
            echo "---"
            cat lists.md
          } > release_note.md

          echo "====== Final release note ======"
          cat release_note.md

          echo "release_note<<EOF" >> $GITHUB_OUTPUT
          cat release_note.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update release notes for tag
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
        run: |
          gh release edit "${GITHUB_REF#refs/tags/}" --notes "${{ steps.get_lists.outputs.release_note }}"
